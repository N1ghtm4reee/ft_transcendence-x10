---
- name: Installing k3s in master node
  hosts: master
  become: true
  tasks:
    - name: Run the script to setup master node
      ansible.builtin.script: ../scripts/master.sh

    - name: Copy token to local file system
      ansible.builtin.fetch:
        src: /home/token.txt
        dest: ../env_files/token.txt
        flat: yes

- name: Installing k3s in agent nodes and joining master node server with token
  hosts: workers
  become: true
  vars:
    master_ip: "{{ hostvars[groups['master'][0]]['ansible_default_ipv4']['address'] }}"
  tasks:
    - name: Copy token file to the cloud machine filesystem
      ansible.builtin.copy:
        src: ../env_files/token.txt
        dest: /home/token.txt
        mode: '0644'

    - name: Copy worker.sh to the cloud machine
      ansible.builtin.copy:
        src: ../scripts/worker.sh
        dest: /home/worker.sh
        mode: '0755'

    - name: Install k3s and join nodes to server
      ansible.builtin.shell: /home/worker.sh

- name: Installing dashboard UI for cluster visualization
  hosts: master
  become: true
  tasks:
    - name: Run the dashboard script
      ansible.builtin.script: ../scripts/dashboard.sh

    - name: Fetch dashboard_token.txt to local machine
      ansible.builtin.fetch:
        src: /home/dashboard_token.txt
        dest: ../env_files/dashboard_token.txt
        flat: yes

    - name: Fetch dashboard_ip_port.txt to local machine
      ansible.builtin.fetch:
        src: /home/dashboard_ip_port.txt
        dest: ../env_files/dashboard_ip_port.txt
        flat: yes

- name: Copy manifests to cloud machine
  hosts: master
  become: true
  tasks:
    - name: Copy entire manifests directory to cloud machine
      ansible.builtin.copy:
        src: ../../k8s/manifests/
        dest: /home/manifests/
        mode: '0644'

- name: Configure NFS Server
  hosts: nfs
  become: true
  vars:
    nfs_export_path1: "/srv/nfs/logs"
    nfs_export_path2: "/srv/nfs/es-data"
    nfs_export_path3: "/srv/nfs/prometheus-data"
    nfs_export_path4: "/srv/nfs/grafana-data"
    nfs_export_options: "*(rw,sync,no_subtree_check,no_root_squash)"

  tasks:
    - name: Install NFS packages
      apt:
        name:
          - nfs-kernel-server
          - nfs-common
        state: present
        update_cache: yes

    - name: Create NFS directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
        recurse: yes
      loop:
        - "{{ nfs_export_path1 }}"
        - "{{ nfs_export_path2 }}"
        - "{{ nfs_export_path3 }}"
        - "{{ nfs_export_path4 }}"

    - name: Set correct ownership for ES data directory
      command: chown -R 1000:1000 {{ nfs_export_path2 }}

    - name: Add exports entry for logs
      lineinfile:
        path: /etc/exports
        line: "{{ nfs_export_path1 }} {{ nfs_export_options }}"
        state: present
        create: yes
        backup: yes

    - name: Add exports entry for es-data
      lineinfile:
        path: /etc/exports
        line: "{{ nfs_export_path2 }} {{ nfs_export_options }}"
        state: present
        create: yes
        backup: yes

    - name: Add exports entry for prometheus-data
      lineinfile:
        path: /etc/exports
        line: "{{ nfs_export_path3 }} {{ nfs_export_options }}"
        state: present
        create: yes
        backup: yes

    - name: Add exports entry for grafana-data
      lineinfile:
        path: /etc/exports
        line: "{{ nfs_export_path4 }} {{ nfs_export_options }}"
        state: present
        create: yes
        backup: yes

    - name: Export NFS shares
      command: exportfs -rav

    - name: Restart and enable NFS server
      systemd:
        name: nfs-kernel-server
        state: restarted
        enabled: yes

    - name: Ensure NFS server is active
      command: systemctl is-active nfs-kernel-server
      register: nfs_status
      changed_when: false
      failed_when: nfs_status.stdout != "active"


- name: Install nfs-common
  hosts: master, workers
  become: true
  tasks:
    - name: Install nfs-common package
      ansible.builtin.apt:
        name: nfs-common
        state: present
        update_cache: yes

- name: Deploy backend services
  hosts: master
  become: true
  tasks:
    - name: create namespace
      ansible.builtin.command: kubectl apply -f /home/manifests/app/namespace.yaml
    - name: Apply Config Map 
      ansible.builtin.command: kubectl apply -f /home/manifests/app/config-map.yaml
    - name: apply shared logs persistent volume
      ansible.builtin.command: kubectl apply -f /home/manifests/shared-logs-pv.yaml
    - name: apply shared logs persistent volume claim
      ansible.builtin.command: kubectl apply -f /home/manifests/app/transcendence-pvc.yaml
    - name: Apply api-gateway manifest
      ansible.builtin.command: kubectl apply -f /home/manifests/app/api-gateway.yaml
    - name: Apply user-service manifest
      ansible.builtin.command: kubectl apply -f /home/manifests/app/user-service.yaml
    - name: Apply auth-service manifest
      ansible.builtin.command: kubectl apply -f /home/manifests/app/auth-service.yaml
    - name: Apply chat-service manifest
      ansible.builtin.command: kubectl apply -f /home/manifests/app/chat-service.yaml

- name: Deploy elk stack
  hosts: master
  become: true
  tasks:
    - name: Create namespace for ELK stack
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/namespace.yaml
    - name: Apply config map for filebeat
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/filebeat/filebeat-cfg-map.yaml
    - name: Apply pv for filebeat
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/elk-pv.yaml
    - name: Apply filebeat persistent volume claim
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/filebeat/filebeat-pvc.yaml
    - name: Apply filebeat deployment
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/filebeat/filebeat.yaml

    - name: Apply logstash config map
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/logstash/logstash-cfg-map.yaml
    - name: apply logstash deployment and service
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/logstash/logstash.yaml
    - name: Apply elasticsearch persistent volume
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/elasticsearch/elasticsearch-pv.yaml
    - name: Apply elasticsearch persistent volume claim
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/elasticsearch/elasticsearch-pvc.yaml
    - name: Apply elasticsearch config map
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/elasticsearch/elasticsearch-cfg-map.yaml
    - name: Apply elasticsearch deployment and service
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/elasticsearch/elasticsearch.yaml
    - name: Apply kibana ConfigMap
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/kibana/kibana-cfg-map.yaml
    - name: Apply kibana deployment and service
      ansible.builtin.command: kubectl apply -f /home/manifests/elk/kibana/kibana.yaml

- name: Deploy prom/grafana stack
  hosts: master
  become: true
  tasks:
    - name: Create namespace for monitoring
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/namespace.yaml
    - name: Apply prometheus persistent volume
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/prometheus/prom-pv.yaml
    - name: Apply prometheus persistent volume claim
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/prometheus/prom-pvc.yaml
    - name: Apply prometheus config map
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/prometheus/prom-cfg-map.yaml
    - name: Apply node-exporter daemonset
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/prometheus/node-exporter.yaml
    - name: Apply prometheus deployment and service
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/prometheus/prometheus.yaml
    - name: Apply grafana persistent volume
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/grafana/grafana-pv.yaml
    - name: Apply grafana persistent volume claim
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/grafana/grafana-pvc.yaml
    - name: Apply grafana deployment and service
      ansible.builtin.command: kubectl apply -f /home/manifests/monitoring/grafana/grafana.yaml