events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # # Basic settings
    # sendfile on;
    # tcp_nopush on;
    # tcp_nodelay on;
    # keepalive_timeout 65;
    # types_hash_max_size 2048;
    
    # Gzip compression
    # gzip on;
    # gzip_vary on;
    # gzip_min_length 10240;
    # gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # API Gateway upstream
    # upstream api_gateway {
    #     server api-gateway:3000;
    # }
    
    server {
        listen 80;
        server_name localhost;
        
        # Serve static frontend files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, no-transform";
            }
        }
        
        # Proxy API requests to API Gateway
        # location /api/ {
        #     proxy_pass http://api_gateway/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_cache_bypass $http_upgrade;
            
        #     # CORS headers
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

        # }
        
        # # WebSocket support for real-time features
        # location /ws/ {
        #     proxy_pass http://api_gateway/ws/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    }
}